[
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetAllEvents",
    "RelativePath": "api/Events/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventApp.Application.DTOs.Event.Responses.EventResponse, EventApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetEventByDate",
    "RelativePath": "api/Events/by-date",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "date",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventApp.Application.DTOs.Event.Responses.EventResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetEventById",
    "RelativePath": "api/Events/by-id/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetEventByTitle",
    "RelativePath": "api/Events/by-title",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "title",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventApp.Application.DTOs.Event.Responses.EventResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "CreateEvent",
    "RelativePath": "api/Events/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.Event.Requests.AddEventRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "DeleteEvent",
    "RelativePath": "api/Events/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetFilteredEvents",
    "RelativePath": "api/Events/filter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Address",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "City",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "State",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Country",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Category",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventApp.Application.DTOs.Event.Responses.EventResponse, EventApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetEventsByPage",
    "RelativePath": "api/Events/page",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PageIndex",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventApp.Domain.Models.Pagination\u00601[[EventApp.Application.DTOs.Event.Responses.EventResponse, EventApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetEventsSortedByCategory",
    "RelativePath": "api/Events/sorted-by-category",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventApp.Application.DTOs.Event.Responses.EventResponse, EventApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "GetEventsSortedByLocation",
    "RelativePath": "api/Events/sorted-by-location",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[EventApp.Application.DTOs.Event.Responses.EventResponse, EventApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventApp.API.Controllers.EventsController",
    "Method": "UpdateEvent",
    "RelativePath": "api/Events/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.Event.Requests.UpdateEventRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/user/current",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "GetUsersByEvent",
    "RelativePath": "api/user/event-users/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "GetUserEvents",
    "RelativePath": "api/user/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.User.Requests.GetUserEventsRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/user/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.User.Requests.UserLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "Logout",
    "RelativePath": "api/user/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "GetUsersByPage",
    "RelativePath": "api/user/paginate-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PageIndex",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "RefreshToken",
    "RelativePath": "api/user/refresh-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.User.Requests.UserRefreshTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "api/user/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.User.Requests.UserRegisterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "RegisterUserToEvent",
    "RelativePath": "api/user/register-to-event",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.User.Requests.RegisterUserToEventRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventApp.API.Controllers.UserController",
    "Method": "DeleteUserFromEvent",
    "RelativePath": "api/user/remove-from-event",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventApp.Application.DTOs.User.Requests.DeleteUserInEventRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]